//
// zefania_modules_list_serversType.cs.cs
//
// This file was generated by XMLSPY 5 Enterprise Edition.
//
// YOU SHOULD NOT MODIFY THIS FILE, BECAUSE IT WILL BE
// OVERWRITTEN WHEN YOU RE-RUN CODE GENERATION.
//
// Refer to the XMLSPY Documentation for further details.
// http://www.altova.com/xmlspy
//


using System;
using System.Xml;
using Altova.Types;

namespace modullist
{
	public class zefania_modules_list_serversType : Altova.Node
	{
		#region Forward constructors
		public zefania_modules_list_serversType() : base() {}
		public zefania_modules_list_serversType(XmlDocument doc) : base(doc) {}
		public zefania_modules_list_serversType(XmlNode node) : base(node) {}
		public zefania_modules_list_serversType(Altova.Node node) : base(node) {}
		#endregion // Forward constructors

		#region server accessor methods
		public int GetserverMinCount()
		{
			return 1;
		}

		public int GetserverMaxCount()
		{
			return 1;
		}

		public int GetserverCount()
		{
			return DomChildCount(NodeType.Element, "", "server");
		}

		public bool Hasserver()
		{
			return HasDomChild(NodeType.Element, "", "server");
		}

		public SchemaString GetserverAt(int index)
		{
			return new SchemaString(GetDomNodeValue(GetDomChildAt(NodeType.Element, "", "server", index)));
		}

		public SchemaString Getserver()
		{
			return GetserverAt(0);
		}

		public void RemoveserverAt(int index)
		{
			RemoveDomChildAt(NodeType.Element, "", "server", index);
		}

		public void Removeserver()
		{
			while (Hasserver())
				RemoveserverAt(0);
		}

		public void Addserver(SchemaString newValue)
		{
			AppendDomChild(NodeType.Element, "", "server", newValue.ToString());
		}

		public void InsertserverAt(SchemaString newValue, int index)
		{
			InsertDomChildAt(NodeType.Element, "", "server", index, newValue.ToString());
		}

		public void ReplaceserverAt(SchemaString newValue, int index)
		{
			ReplaceDomChildAt(NodeType.Element, "", "server", index, newValue.ToString());
		}
		#endregion // server accessor methods
	}
}
