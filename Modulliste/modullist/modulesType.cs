//
// modulesType.cs.cs
//
// This file was generated by XMLSPY 5 Enterprise Edition.
//
// YOU SHOULD NOT MODIFY THIS FILE, BECAUSE IT WILL BE
// OVERWRITTEN WHEN YOU RE-RUN CODE GENERATION.
//
// Refer to the XMLSPY Documentation for further details.
// http://www.altova.com/xmlspy
//


using System;
using System.Xml;
using Altova.Types;

namespace modullist
{
	public class modulesType : Altova.Node
	{
		#region Forward constructors
		public modulesType() : base() {}
		public modulesType(XmlDocument doc) : base(doc) {}
		public modulesType(XmlNode node) : base(node) {}
		public modulesType(Altova.Node node) : base(node) {}
		#endregion // Forward constructors

		#region module accessor methods
		public int GetmoduleMinCount()
		{
			return 1;
		}

		public int GetmoduleMaxCount()
		{
			return Int32.MaxValue;
		}

		public int GetmoduleCount()
		{
			return DomChildCount(NodeType.Element, "", "module");
		}

		public bool Hasmodule()
		{
			return HasDomChild(NodeType.Element, "", "module");
		}

		public moduleType GetmoduleAt(int index)
		{
			return new moduleType(GetDomChildAt(NodeType.Element, "", "module", index));
		}

		public moduleType Getmodule()
		{
			return GetmoduleAt(0);
		}

		public void RemovemoduleAt(int index)
		{
			RemoveDomChildAt(NodeType.Element, "", "module", index);
		}

		public void Removemodule()
		{
			while (Hasmodule())
				RemovemoduleAt(0);
		}

		public void Addmodule(moduleType newValue)
		{
			AppendDomElement("", "module", newValue);
		}

		public void InsertmoduleAt(moduleType newValue, int index)
		{
			InsertDomElementAt("", "module", index, newValue);
		}

		public void ReplacemoduleAt(moduleType newValue, int index)
		{
			ReplaceDomElementAt("", "module", index, newValue);
		}
		#endregion // module accessor methods
	}
}
